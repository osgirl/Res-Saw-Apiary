FORMAT: 1A
HOST: https://dev01-resapi.rankgrouptech.net/

# RES.API.SAW - Draft

Rank Enterprise Services API is a collection of business services exposed over a RESTful inteface with HATEOAS constraints applied.

# Correlation Tokens

Correlation tokens are used for the tracking and debugging purposes. It is a string value,
which could represent GUID, unique message or transaction ID. The correlation token must
be supplied as `X-Correlation-Token` HTTP header to every request to RES API. It must be
unique for each request in scope of the same client. The correlation token's uniqueness
is guaranteed by the client.

# HATEOAS

This RESTful API has been design with HATEOAS (Hypermedia As The Engine Of Application State) constraint in mind.
A payload with a set of suggested links is returned as a part of each resource in the response, where it's possible.

In case an initial set of available links is required, a special `/journeys` endpoint has to be called.
Depending on the access token and parameters supplied, the endpoint will return the links available to the client.

For example:
```
    {
        "_Links": {
            "ViewBalance": {
                "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances",
                "Method": "GET",
                "AllowedScopes": [ "clientWalletDeposit", "onbehalfWalletDeposit" ]
            }
        }
    }
```

The following is a table of all possible URIs with the corresponding HTTP verbs and allowed scopes defined in the API:

|Link name|Href|Method|Allowed Scopes|
|---------|---|---------|--------------|
|Self|Refers to the resource it's attached to|
|Journeys|/journeys|GET|any|
|SearchCustomerByMembershipCard|/customers?cardNo={cardNo}&dateOfBirth={dateOfBirth}|GET|readonlyCustomerSearch|
|UpdateCustomerPersonal|/customers/{identifier}/personal|PUT|staffUpdateCustomerPersonal|
|UpdateCustomerAddress|/customers/{identifier}/address|PUT|staffUpdateCustomerAddress|
|UpdateCustomerContactDetails|/customers/{identifier}/contactDetails|PUT|staffUpdateCustomerContactDetails|
|UpdateCustomerConsents|/customers/{identifier}/consents|PUT|staffUpdateCustomerConsents|
|RegisterRetailCustomer|/customers|POST|staffRegisterRetailCustomer|
|CanCreateSaw|/customers/{identifier}/sawEligible|GET|staffUpgradeCustomer<br/>onbehalfUpgradeCustomer|
|UpgradeToSaw|/customers/{identifier}/upgradeToSaw|POST|staffUpgradeCustomer<br/>onbehalfUpgradeCustomer|
|GetSuspensions|/customers/{identifier}/suspensions|GET|staffSetAccountSuspension|
|AddSuspension|/customers/{identifier}/suspensions|POST|staffSetAccountSuspension|
|UpdateSuspension|/customers/suspensions/{identifier}|PUT|staffSetAccountSuspension|
|RemoveSuspension|/customers/suspensions/{identifier}|DELETE|staffRemoveAccountSuspension|
|GetMembershipCards|/customers/{identifier}/membershipCards|GET|staffAddCard|
|RegisterOrReplaceMembershipCard|/customers/{identifier}/membershipCards|PUT|staffAddCard|
|UpdateAgreement|/customers/agreements/{identifier}|PUT|staffUpdateCustomerAgreement|
|RequestPinChange|/customers/{identifier}/authentication/pinAuth/requestChange|POST|staffRequestChangePin|
|ViewBalance|/customers/{identifier}/finances|GET|clientWalletGetBalance<br/>staffWalletGetBalance|
|Transfer|/customers/{identifier}/finances/transfers/{transactionId}|POST|clientWalletTransfer<br/>onbehalfWalletTransfer|
|GetWalletTransactionStatus|/transactions/{transactionId}|GET|staffWalletGetTransactionStatus|

# Authentication

RES API authentication uses OpenID connect for identity, aligned with the [OAuth2](http://oauth.net/2/) protocol. 

Clients will be issued with a `client_id` and `client_secret` that must be provided for token requests. 

<a name="tokens"></a>
## Access Tokens

All requests to RES resources require the client application to provide an appropriate access
token. These tokens are provided in the Authorization header as Bearer tokens. Example:

```
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSIsImtpZCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9.eyJjbGllbnRfaWQiOiJiZWRlLWdyb3N2ZW5vci1jbXMiLCJzY29wZSI6InJlYWRfZ3Jvc3Zlbm9ybG95YWx0eSIsImlzcyI6Imh0dHBzOi8vaWRzcnYzLmNvbSIsImF1ZCI6Imh0dHBzOi8vaWRzcnYzLmNvbS9yZXNvdXJjZXMiLCJleHAiOjE0MzU5Mzk5NzQsIm5iZiI6MTQzNTkzOTYxNH0.nGLoo8B_enlzdY2OX_sf0d1IEGbAUOL8E_-Dl94owI_rnxRrtvumz6fIGx8L5hTXzl8-GlM0Edfb3fe9cD49JDUbWuh0fYnBTjj4SnALv6DSmYSFHeDBkbbbzwI4QVuERblfeGB04ZAEDCjZlLoL4uly-lE8Oq2E150R83u43i8zDfYqKpPp1D5rvhOvdnOg4q3coICHqGkFzsg_0wfEwaYUgc2AWCuyy7ry4pEnV8cg7BVA3GOldkY5jsE062SP4T-N-UjzKd3Lz1KG0bBYZPfJ2CwV2oTgTnwEAkubIqdfYLm_bXMz8sQwm4I_V22qMDhavYwYBhFp1vQdWoYD2A
```

**Token validation**

Access tokens are fully signed [Json Web Tokens](http://jwt.io/) and should be validated by
the client. Many libraries exist for all platforms that support validating tokens. The details
of RES authentication certificates used to sign token are available under `/.well-known/jwks` endpoint.

<a name="scopes"></a>
## Scopes

In order to access any resource provided by RES, the client should provide a token of a certain type obtained for appropriate scopes.
The relation between resources and allowed scopes is reflected in each endpoint's description.
The following table explains what should be supplied as a part of auth server request in order to get a token with a particular scope issued.

|Authentication type|Token type|Required parameters|Available scopes|
|-------------------|----------|-------------------|----------------|
|Read-only operations|Client Credentials Token|clientId <br/>clientSecret |readonlyCustomerSearch|
|Member of staff performing an operation|Client Credentials Token|clientId <br/>clientSecret <br/>venue_id <br/>location_id <br/>staff_id <br/>username |staffSetAccountSuspension <br/>staffRemoveAccountSuspension <br/>staffWalletGetBalance <br/>staffUpdateCustomerPersonal <br/>staffUpdateCustomerAddress <br/>staffUpdateCustomerContactDetails <br/>staffUpdateCustomerConsents <br/>staffUpdateCustomerAgreement <br/>staffRegisterRetailCustomer <br/>staffUpgradeCustomer <br/>staffWalletGetTransactionStatus <br/>staffAddCard <br/>staffUpdateCard <br/>staffRequestChangePin|
|Customer performing action themselves in a venue|Resource Owner Token|clientId <br/>clientSecret <br/>venue_id <br/>location_id <br/>game_category <br/>username <br/>password |clientWalletTransfer <br/>clientWalletGetBalance|
|Staff operating on behalf of a customer|Resource Owner Token|clientId <br/>clientSecret <br/>venue_id <br/>location_id <br/>staff_id <br/>username <br/>password |onbehalfWalletTransfer <br/>onbehalfUpgradeCustomer|

<a name="client-credentials-access-token"></a>
## Client Credentials Access Token
The provided token is utilised for resources where no player session is required, currently this token flow is used for all API end points.

**Example request**

`client_id:client_secret` Base64 encoded, e.g. `YmVkZS1ncm9zdmVub3ItY21zOnNlY3JldA==` and passed in the `Authorization` header

```
POST /connect/token
Content-Type: application/x-www-form-urlencoded
Authorization: Basic YmVkZS1ncm9zdmVub3ItY21zOnNlY3JldA==

grant_type=client_credentials
&scope=res
```

**Example response**

```
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSIsImtpZCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9.eyJjbGllbnRfaWQiOiJiZWRlLWdyb3N2ZW5vci1jbXMiLCJzY29wZSI6InJlYWRfZ3Jvc3Zlbm9ybG95YWx0eSIsImlzcyI6Imh0dHBzOi8vaWRzcnYzLmNvbSIsImF1ZCI6Imh0dHBzOi8vaWRzcnYzLmNvbS9yZXNvdXJjZXMiLCJleHAiOjE0MzU5Mzk5NzQsIm5iZiI6MTQzNTkzOTYxNH0.nGLoo8B_enlzdY2OX_sf0d1IEGbAUOL8E_-Dl94owI_rnxRrtvumz6fIGx8L5hTXzl8-GlM0Edfb3fe9cD49JDUbWuh0fYnBTjj4SnALv6DSmYSFHeDBkbbbzwI4QVuERblfeGB04ZAEDCjZlLoL4uly-lE8Oq2E150R83u43i8zDfYqKpPp1D5rvhOvdnOg4q3coICHqGkFzsg_0wfEwaYUgc2AWCuyy7ry4pEnV8cg7BVA3GOldkY5jsE062SP4T-N-UjzKd3Lz1KG0bBYZPfJ2CwV2oTgTnwEAkubIqdfYLm_bXMz8sQwm4I_V22qMDhavYwYBhFp1vQdWoYD2A",
    "expires_in": 600,
    "token_type": "bearer"
}
```

**Authentication flow**

The following diagram depicts the sequence of interactions between client and the main RES components in context of authentication process:

![Client Credentials Authentication Flow](https://rankgroup.atlassian.net/wiki/download/attachments/9699367/Client-Credentials-Auth-Flow.png?version=1&modificationDate=1490862680794&cacheVersion=1&api=v2)

(1) - The Client requests Client Credentials [Access Token](#tokens) from Identity Provider (IDP).
The parameters to be supplied depend on the [scopes](#scopes) required to perform an operation
over a resource.

(2) - `access_token` of the requested token type is issued by IDP and returned to the Client.

(3) - The Client sends a request to one of RES API endpoints.
The obtained `access_token` must be supplied to the request as `Authorization` HTTP header.

(4) - RES communicates to IDP, in order to validate the token provided by the Client.

(5) - IDP responds with the token validation result.
If token is expired, compromised or revoked then the result will be negative, otherwise positive.

(6) - Once the token is validated, RES carries on processing the Client's request and responds accordingly.

### Token expiration

The access tokens have an expiration time defined in the token claims and duplicated for
simplicity in the response body. After `expires_in` seconds, clients applications will need to
make another client credentials request to get a new access token for subsequent operations
requiring a client access token.

<a name="resource-owner-access-token"></a>
## Resource Owner Access Token
Resource owner access tokens are required to access resources where an authenticated customer is expected. Note that to generate a resource owner access token, client credentials should also be supplied using the Authorization header as shown. 

**Example request**

`client_id:client_secret` Base64 encoded, e.g. 98712389abc and passed in the Authorization header

**channel** - The parameter identifies the way **username** and **password** are interpreted. The following values are supported: `retail`, `digital`. If not specified then defaults to `retail`.

**username** - Username of the resource owner (customer) for `digital` or membership number for `retail`. Always required.

**password** - Password of the resource owner (customer) for `digital` or PIN for `retail`. Always required.

**venue_id** - Identifier of a venue where a call to RES comes from. Always required.

**game_category** - The game category (e.g. slots, table game). Required for certain scopes (see [Scopes](#scopes) table below).

**location_id** - Identifier of a device/machine calling RES. Always required.

**staff_id** - Identifier of a member of staff calling RES. Required only when a member of staff initiates an API call (see [Scopes](#scopes) table below).

```
POST /connect/token
Content-Type: application/x-www-form-urlencoded
Authorization: Basic YmVkZS1ncm9zdmVub3ItY21zOnNlY3JldA==

grant_type=password
&scope=res
&channel=retail
&username=<membershipNumber/username>
&password=<pin/password>
&venue_id=50601
&game_category=slots
&location_id=AR01
&staff_id=cashier4
```

**Example response**

```
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.ew0KICAiY2xpZW50X2lkIjogInJlcyIsDQogICJzY29wZSI6IFsNCiAgICAic3BpbmUiLA0KICAgICJzaXRlY29kZSINCiAgXSwNCiAgInN1YiI6ICI2Mzk3MTk5MTk4MzUwMjU0MTIiLA0KICAiR2FtZVRva2VuIjogIldzMkY3a1NwMmRaWlZHWlRNWU1yRU1yYVJ5QXFwU1BDS2ZHWUl6SFhFbXVjNUM5dzdVYlM0dk5zZFIwa01LUlV1SDVpRWdwSWI2LVd0REpVMkMwQlliTDROZXlGRGpTVW9namtiMjY5RGF3MSIsDQogICJhbXIiOiAicGFzc3dvcmQiLA0KICAiYXV0aF90aW1lIjogMTQyOTI4NjE5NywNCiAgImlkcCI6ICJpZHNydiIsDQogICJpc3MiOiAiaHR0cDovL2V3MS1xYTAxLTUwMS5jbG91ZGFwcC5uZXQ6ODg4OC9jb3JlIiwNCiAgImF1ZCI6ICJodHRwOi8vZXcxLXFhMDEtNTAxLmNsb3VkYXBwLm5ldDo4ODg4L2NvcmUvcmVzb3VyY2VzIiwNCiAgImV4cCI6IDE0MjkyODY3OTgsDQogICJuYmYiOiAxNDI5Mjg2MTk4DQp9.eqvm-4vOF6s7Iwpqfd01qa4ZkwSMkQiVgNFNCqdjX-hX843pUtGTM2XdEIBwvwf4OxldptRtYl5gdAcChXJcZf2TLXhxnznP4uPMQsvEXlm3qy44uHXj8phlEsQELC2CydcVUa-C6sZV0RXJ-QNfUo2sGQQwnX7rWP19Byf-Z6QzmaJFkSWU8yOl45qxfSu3XDmf4GyQpBPnn5YBi8FWuK7R2QSBdK3JFlQ9VvHyk7QeDQhfMg1OJdP1JfbXbi_V3WN3cD700hx_f2f_mVS6o_VYEHBh9IPb7wsCcSfR33BKKlXFUraKdttIwYjQL-frEmpOzI2mQDGg2de_PodU-w",
    "expires_in": 600,
    "token_type": "bearer",
    "refresh_token": "1cf75ed7e40723b64bbe29eb2f2654b8"
}
```

**Authentication flow**

The following diagram depicts the sequence of interactions between client and the main RES components in context of authentication process:

![Resource Owner Authentication Flow](https://rankgroup.atlassian.net/wiki/download/attachments/9699367/Resource-Owner-Auth-Flow.png?version=1&modificationDate=1490862699245&cacheVersion=1&api=v2)

(1) - The Client requests Resource Owner [Access Token](#tokens) from Identity Provider (IDP).
The parameters to be supplied depend on the [scopes](#scopes) required to perform an operation
over a resource. Customer's `username` and `password` are mandatory parameters for this type of authentication flow.

(2) - `access_token` of the requested token type along with `refresh_token` is issued by IDP and returned to the Client.
It's Client's responsibility to save `refresh_token` if [Refresh Token Authentication Flow](#refresh-token) is going to be used for further RES API calls.

(3) - The Client sends a request to one of RES API endpoints.
The obtained `access_token` must be supplied to the request as `Authorization` HTTP header.

(4) - RES communicates to IDP, in order to validate the token provided by the Client.

(5) - IDP responds with the token validation result.
If token is expired, compromised or revoked then the result will be negative, otherwise positive.

(6) - Once the token is validated, RES carries on processing the Client's request and responds accordingly.

<a name="refresh-token"></a>
## Refresh Token

Resource owner access tokens have an expiration time defined both in the response above and inside the token claims, shown in seconds. Unlike the client credentials access token, resource owner tokens provide a specific refresh operation to allow the client application to extend the life of the session without requiring customer authentication details to be resupplied.

**Example Request**

`client_id:client_secret` Base64 encoded, e.g. `YmVkZS1ncm9zdmVub3ItY21zOnNlY3JldA==` and passed in the `Authorization` header

```
POST /connect/token
Content-Type: application/x-www-form-urlencoded
Authorization: Basic YmVkZS1ncm9zdmVub3ItY21zOnNlY3JldA==

grant_type=refresh_token
&refresh_token=1cf75ed7e40723b64bbe29eb2f2654b8
```

**Example Response**

```
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Im5kcnRheVk3c0tuSjZSY3ZCRjlLZl9BU3B0SSIsImtpZCI6Im5kcnRheVk3c0tuSjZSY3ZCRjlLZl9BU3B0SSJ9.eyJjbGllbnRfaWQiOiJ0Y3MiLCJzY29wZSI6WyJnYW1lVG9rZW4iLCJvZmZsaW5lX2FjY2VzcyIsInNpdGVjb2RlIiwic3BpbmUiXSwic3ViIjoiNjQ0MTM5MTk1ODYxOTY2ODQ4IiwiYW1yIjoicGFzc3dvcmQiLCJhdXRoX3RpbWUiOjE0NDI1MDQxMTUsImlkcCI6Imlkc3J2IiwiZ2FtZVRva2VuIjoiRExlZS0zNHhuNDBxcEowVWpZUzRWV1VIdFQzY2Zmb05oOU1qVjcxRVNocWJ6QVBBRjUyWWdnX2I4ZmZjT0JvbUVaRDdScnVzNlg3X3YxZ0dHeXNlNnRvNWIwTEs2S2otWmhZa2xjMGlSelkxIiwic2l0ZWNvZGUiOiJncm9zdmVub3JjYXNpbm9zLmNvbSIsImlzcyI6Imh0dHA6Ly9ldzEtcWEwMS01MDEtaWxiLmFkLmJlZGVnYW1pbmcuY29tOjg4ODgvY29yZSIsImF1ZCI6Imh0dHA6Ly9ldzEtcWEwMS01MDEtaWxiLmFkLmJlZGVnYW1pbmcuY29tOjg4ODgvY29yZS9yZXNvdXJjZXMiLCJleHAiOjE0NDI1MDQ0MTUsIm5iZiI6MTQ0MjUwNDExNX0.NW3YVYwmdibBYkRgx1TveOVBDA3-x7W9D_R3tkL5-DOgiTEbirVeDH6kC4Pwy2oBbJyZhxK4pzyIbynm2LjeWtf36qn_JW40UX0POJX7WTv4J-HHja2ExB2xCmvPMpQtv1V9GnuHz7yuxMr_IdNrBfedfFiwtmf2j2AILQsgjvsDLjr2U7MSyyGozwRRvtbU6ZkOm6zNxAonblDtmlPZmFvlJ8p8EZ-f37s9Vyc_-oDgF8qm5AQpvjrII7OsIMeWbaJtjmf6EgSjzeDnXaIvmdlo_RNozIcLDCmndXbLRmhLiJ5_r1aEGJXqvmZPXU1J5Sx7i2XbS2q5koLfVmYRNA",
    "expires_in": 600,
    "token_type": "bearer",
    "refresh_token": "2cd75ed7e40723b64bbe29eb2f2654b8"
}
```

**Authentication flow**

The following diagram depicts the sequence of interactions between client and the main RES components in context of authentication process:

![Refresh Token Authentication Flow](https://rankgroup.atlassian.net/wiki/download/attachments/9699367/Refresh-Token-Auth-Flow.png?version=1&modificationDate=1490862715845&cacheVersion=1&api=v2)

(1) - The Client requests Resource Owner [Access Token](#tokens) from Identity Provider (IDP).
The parameters to be supplied depend on the [scopes](#scopes) required to perform an operation
over a resource. Previously obtained `refresh_token` is a mandatory parameter for this type of authentication flow.

(2) - `access_token` of the requested token type along with `refresh_token` is issued by IDP and returned to the Client.
If the returned `refresh_token` differes from the supplied value, the Client should start using new
`refresh_token` since the previously saved one may be expired.

(3) - The Client sends a request to one of RES API endpoints.
The obtained `access_token` must be supplied to the request as `Authorization` HTTP header.

(4) - RES communicates to IDP, in order to validate the token provided by the Client.

(5) - IDP responds with the token validation result.
If token is expired, compromised or revoked then the result will be negative, otherwise positive.

(6) - Once the token is validated, RES carries on processing the Client's request and responds accordingly.

# Group Journeys

This API is HATEOAS-based entry point for a client.

## Initial Journeys [/journeys]

This endpoint provides HATEOAS-centric set of links to resources and actions available to the client, based upon the token supplied.

### Get Initial Journeys [GET]

**Allowed scopes**: any

+ Request

    + Headers 
            
            Authorization: Bearer (client credentials/resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

    Read-only operations
    
    + Body

            {
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/journeys",
                        "Method": "GET"
                    },
                    "SearchCustomerByMembershipCard": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers?cardNo={cardNo}&dateOfBirth={dateOfBirth}",
                        "Method": "GET",
                        "AllowedScopes": [ "readonlyCustomerSearch" ]
                    }
                }
            }

+ Response 200 (application/json)

    Member of staff performing an operation
    
    + Body

            {
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/journeys",
                        "Method": "GET"
                    },
                    "GetSuspensions": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/suspensions",
                        "Method": "GET",
                        "AllowedScopes": [ "staffSetAccountSuspension" ]
                    },
                    "AddSuspension": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/suspensions",
                        "Method": "POST",
                        "AllowedScopes": [ "staffSetAccountSuspension" ]
                    },
                    "ViewBalance": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances",
                        "Method": "GET",
                        "AllowedScopes": [ "clientWalletGetBalance", "staffWalletGetBalance" ]
                    },
                    "UpdateCustomerPersonal": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/personal",
                        "Method": "PUT",
                        "AllowedScopes": [ "staffUpdateCustomerPersonal" ]
                    },
                    "UpdateCustomerAddress": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/address",
                        "Method": "PUT",
                        "AllowedScopes": [ "staffUpdateCustomerAddress" ]
                    },
                    "UpdateCustomerContactDetails": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/contactDetails",
                        "Method": "PUT",
                        "AllowedScopes": [ "staffUpdateCustomerContactDetails" ]
                    },
                    "UpdateCustomerConsents": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/consents",
                        "Method": "PUT",
                        "AllowedScopes": [ "staffUpdateCustomerConsents" ]
                    },
                    "UpdateAgreement": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/agreements/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b",
                        "Method": "PUT",
                        "AllowedScopes": [ "staffUpdateCustomerAgreement" ]
                    },
                    "RegisterRetailCustomer": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers",
                        "Method": "POST",
                        "AllowedScopes": [ "staffRegisterRetailCustomer" ]
                    },
                    "CanCreateSaw": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/sawEligible",
                        "Method": "POST",
                        "AllowedScopes": [ "staffUpgradeCustomer", "onbehalfUpgradeCustomer" ]
                    },
                    "GetWalletTransactionStatus": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/transactions/{transactionId}",
                        "Method": "GET",
                        "AllowedScopes": [ "staffWalletGetTransactionStatus" ]
                    },
                    "GetMembershipCards": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/membershipCards",
                        "Method": "GET",
                        "AllowedScopes": [ "staffAddCard" ]
                    },
                    "RegisterMembershipCard": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/membershipCards",
                        "Method": "POST",
                        "AllowedScopes": [ "staffAddCard" ]
                    }
                }
            }
            
+ Response 200 (application/json)

    Customer performing action themselves in a venue
    
    + Body

            {
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/journeys",
                        "Method": "GET"
                    },
                    "RequestPinChange": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/authentication",
                        "Method": "POST",
                        "AllowedScopes": [ "staffRequestChangePin" ]
                    },
                    "ViewBalance": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances",
                        "Method": "GET",
                        "AllowedScopes": [ "clientWalletGetBalance", "staffWalletGetBalance" ]
                    },
                    "Transfer": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances/transfers/{transactionId}",
                        "Method": "POST",
                        "AllowedScopes": [ "clientWalletTransfer", "onbehalfWalletTransfer" ]
                    }
                }
            }
            
+ Response 200 (application/json)

    Staff operating on behalf of a customer
    
    + Body

            {
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/journeys",
                        "Method": "GET"
                    },
                    "RequestPinChange": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/authentication",
                        "Method": "POST",
                        "AllowedScopes": [ "staffRequestChangePin" ]
                    },
                    "Transfer": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances/transfers/{transactionId}",
                        "Method": "POST",
                        "AllowedScopes": [ "clientWalletTransfer", "onbehalfWalletTransfer" ]
                    }
                }
            }

+ Response 200 (application/json)

    No journeys available
    
    + Body

            {
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/journeys",
                        "Method": "GET"
                    }
                }
            }

# Group Customers

## Customers [/customers]

This is a dedicated aggregated endpoint for Customer services.
This endpoint is a replacement for the existing Grosvenor Customer look service provided by RES v1 API. BEDE uses this API to look customer's retail profile when they chose to join the website. This version of the API includes IsSawCustomer flag, BEDE use this flag to determine whether to present customer with the "digital conversion" journey or not

Model for the resource if defined below:
| Name                                                  | Type      | Required          | Description                                                                           |Example                    |
|:---                                                   |:---       |:--:               |:---                                                                                   |:---                       |
|Title                                                  |string[25] |**yes**            |Allowed values: "Mr", "Mrs", "Miss", ...                                               |"Mr"                       |
|FirstName                                              |string[40] |**yes**            |                                                                                       |"John"                     |
|MiddleName                                             |string[40] |**optional**       |                                                                                       |"Dan"                      |
|LastName                                               |string[40] |**yes**            |                                                                                       |"Jackson"                  |
|DateOfBirth                                            |date       |**yes**            |                                                                                       |"1955-01-30"               |
|Gender                                                 |string[1]  |**yes**            |Allowed values: "U" for Unknown, "F" for Female, "M" for Male                          |"M"                        |
|Nationality                                            |string[2]  |**optional**       |ISO two-letter country codes. Allowed values: "AU", "NZ", "GB", "US", etc.             |"US"                       |
|Occupation                                             |string[40] |**optional**       |                                                                                       |"Clerk"                    |
|VipGrade                                               |string[30] |**yes**            |                                                                                       |"Black"                    |
|RetailId                                               |string[10] |**yes**            |Up to 10 digits allowed.                                                               |"1234567890"               |
|FirstRegisteredClubNumber                              |string[5]  |**yes**            |                                                                                       |"50106"                    |
|Address.Line1                                          |string[?]  |**yes**            |                                                                                       |"Flat 2"                   |
|Address.Line2                                          |string[?]  |**yes**            |                                                                                       |"10 Downing Street"        |
|Address.Town                                           |string[?]  |**yes**            |                                                                                       |"London"                   |
|Address.Postcode                                       |string[?]  |**yes**            |                                                                                       |"WC2B 4AA"                 |
|Address.County                                         |string[?]  |**optional**       |                                                                                       |"Greater London"           |
|Address.Country                                        |string[2]  |**yes**            |ISO two-letter country codes. Allowed values: "AU", "NZ", "GB", "US", etc.             |"GB"                       |
|ContactDetails.HomePhone                               |string[?]  |**optional**       |                                                                                       |"07886028945"              |
|ContactDetails.BusinessPhone                           |string[?]  |**optional**       |                                                                                       |"07886028946"              |
|ContactDetails.MobilePhone                             |string[?]  |**optional** (either Mobile or Email must be supplied)|                                                    |"07886028947"              |
|ContactDetails.Email                                   |string[?]  |**optional** (either Mobile or Email must be supplied)|                                                    |"john@rank.com"            |
|AllowedMarketingContacts.IsHomeContactallowed          |bool       |**optional**       |Whether to allow marketing contacts via post                                           |true                       |
|AllowedMarketingContacts.IsMobileContactAllowed        |bool       |**optional**       |Whether to allow marketing contacts via mobile phone                                   |true                       |
|AllowedMarketingContacts.IsEmailContactAllowed         |bool       |**optional**       |Whether to allow marketing contacts via email                                          |true                       |
|AllowedMarketingContacts.IsSMSContactAllowed           |bool       |**optional**       |Whether to allow marketing contacts via SMS                                            |true                       |

For registration following input validation in place

**Following fields must follow a valid format:**
- `ContactDetails.Email` address - valid email format
- `ContactDetails.HomePhone`, `BusinessPhone`, `MobilePhone` - starts with 0 or +, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 07886028945, +447886029845, etc.)
- `Address.Postcode` - valid UK postcode for UK addresses
- `DateOfBirth` - must be of legal age (18)

### Search by Membership Card [GET /customers?cardNo={cardNo}&dateOfBirth={dateOfBirth}]

**Allowed scopes**: `readonlyCustomerSearch`

The endpoint for customer lookup from Bede using Membership Card Number and Date of Birth.

+ Parameters
    + cardNo: `123456` (string, required)
    + dateOfBirth: `2001-12-12` (date, optional)
    
+ Request

    + Headers 
            
            Authorization: Bearer (client credentials token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

            {
                "Title": "Mr",
                "FirstName": "John",
                "MiddleName": "Dan",
                "LastName": "Jackson",
                "DateOfBirth": "1955-01-30",
                "Gender": "M",
                "Nationality": "GB",
                "Occupation": "Clerk",
                "VipGrade": "Black",
                "RetailId": "12345678",
                "DigitalId": "12345678",
                "DigitalUsername": "johnSilver777",
                "FirstRegisteredClubNumber": "45611",
                "Address": {
                    "Line1": "Flat 57",
                    "Line2": "10 Downing Street",
                    "Town": "London",
                    "Postcode": "WC2B 4AA",
                    "County": "Greater London",
                    "Country": "GB"
                },
                "ContactDetails": {
                    "HomePhone": "07886028945",
                    "BusinessPhone": "07886028946",
                    "MobilePhone": "07886028947",
                    "Email": "jack@rank.com"
                }
            }

+ Response 204 (application/json)

+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

### Update Personal Information [PUT /customers/{identifier}/personal]

**Allowed scopes**: `staffUpdateCustomerPersonal`

This API is to update an existing customers information once they have been identified as a SAW customer.

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body
    
            {
                "Title": "Mr",
                "FirstName": "John",
                "MiddleName": "Dan",
                "LastName": "Jackson",
                "DateOfBirth": "1955-01-30",
                "Gender": "M",
                "Nationality": "GB",
                "Occupation": "Clerk"
            }
            
+ Response 200 (application/json)

            {
                "_Links": {
                    "Journeys": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/journeys",
                        "Method": "GET"
                    }
                }
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer not found"
            }
            
+ Response 400 (application/json)

            {
                "Message": "Invalid fields"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

### Update Address [PUT /customers/{identifier}/address]

**Allowed scopes**: `staffUpdateCustomerAddress`

This API is to update an existing customers information once they have been identified as a SAW customer.

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body
    
            {
                "Line1": "Flat 57",
                "Line2": "10 Downing Street",
                "Town": "London",
                "Postcode": "WC2B 4AA",
                "County": "Greater London",
                "Country": "GB"
            }
            
+ Response 200 (application/json)

            {
                "_Links": {
                    "Journeys": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/journeys",
                        "Method": "GET"
                    }
                }
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer not found"
            }
            
+ Response 400 (application/json)

            {
                "Message": "Invalid fields"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

### Update Contact Details [PUT /customers/{identifier}/contactDetails]

**Allowed scopes**: `staffUpdateCustomerContactDetails`

This API is to update an existing customers information once they have been identified as a SAW customer.

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body
    
            {
                "LandlinePhone": "07886028945",
                "MobilePhone": "07886028947",
                "Email": "jack@rank.com"
            }
            
+ Response 200 (application/json)

            {
                "_Links": {
                    "Journeys": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/journeys",
                        "Method": "GET"
                    }
                }
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer not found"
            }
            
+ Response 400 (application/json)

            {
                "Message": "Invalid fields"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

### Update Consents [PUT /customers/{identifier}/consents]

**Allowed scopes**: `staffUpdateCustomerConsents`

This API is to update an existing customers information once they have been identified as a SAW customer.

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body
    
            {
                "PostConsentFrom": "2017-03-03T10:00:00",
                "LandlinePhoneConsentFrom": null,
                "MobilePhoneConsentFrom": "2017-01-25T10:00:00",
                "EmailConsentFrom": "2017-01-25T10:00:00"
            }
            
+ Response 200 (application/json)

            {
                "_Links": {
                    "Journeys": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/journeys",
                        "Method": "GET"
                    }
                }
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer not found"
            }
            
+ Response 400 (application/json)

            {
                "Message": "Invalid fields"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }
           
### Register Retail Customer [POST]

**Allowed scopes**: `staffRegisterRetailCustomer`

This API will be called when a customer has had a new retail account created. This will create a record within Rank systems except digital

+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (client credentials token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e
    
    + Body
    
            {
                "Title": "Mr",
                "FirstName": "John",
                "MiddleName": "Dan",
                "LastName": "Jackson",
                "DateOfBirth": "1955-01-30",
                "Gender": "M",
                "Nationality": "GB",
                "Occupation": "Clerk",
                "VipGrade": "Black",
                "RetailId": "12345678",
                "FirstRegisteredClubNumber": "45611",
                "Address": {
                    "Line1": "Flat 57",
                    "Line2": "10 Downing Street",
                    "Town": "London",
                    "Postcode": "WC2B 4AA",
                    "County": "Greater London",
                    "Country": "GB"
                },
                "ContactDetails": {
                    "HomePhone": "07886028945",
                    "BusinessPhone": "07886028946",
                    "MobilePhone": "07886028947",
                    "Email": "jack@rank.com"
                },
                "AllowedMarketingContacts": {
                    "IsHomeContactallowed": true,
                    "IsMobileContactAllowed": true,
                    "IsEmailContactAllowed": true,
                    "IsSMSContactAllowed": true
                }
            }

+ Response 200 (application/json)
    
            {
                "_Links": {
                    "CanCreateSaw": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/sawEligible",
                        "Method": "GET",
                        "AllowedScopes": [ "staffUpgradeCustomer" ]
                    }
                }
            }
                
+ Response 400 (application/json)

            {
                "Message": "Invalid fields"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

## Upgrade to SAW [/customers/{identifier}/upgradeToSaw]

### Can Create SAW [GET /customers/{identifier}/sawEligible]

**Allowed scopes**: `staffUpgradeCustomer`, `onbehalfUpgradeCustomer`

This API will be called when a customer has an existing retail or digital accounts.
If a customer has already got a digital account, but not a retail one, then a new access token
for `onbehalfUpgradeCustomer` scope must be obtained, supplying his digital `username` and
`password`. Scope `staffUpgradeCustomer` should be used if the customer has alrady got
a retail account or both, digital and retail.


+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)
    
+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (client credentials token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

            {
                "CanCreateSAW" : true,
                "CanEnterClub" : true,
                "DigitalAccountUsernames" : [
                    "johnSilver777",
                    "johnX91",
                    "drwho91"
                ],
                "RetailAccountIds" : [
                    "12345678", 
                    "87654321"
                ],
                "GoldenRecord" : {
                    "Title": "Mr",
                    "FirstName": "John",
                    "MiddleName": "Dan",
                    "LastName": "Jackson",
                    "DateOfBirth": "1955-01-30",
                    "Gender": "M",
                    "Nationality": "GB",
                    "Occupation": "Clerk",
                    "VipGrade": "Black",
                    "Address": {
                        "Line1": "Flat 57",
                        "Line2": "10 Downing Street",
                        "Town": "London",
                        "Postcode": "WC2B 4AA",
                        "County": "Greater London",
                        "Country": "GB"
                    },
                    "ContactDetails": {
                        "HomePhone": "07886028945",
                        "BusinessPhone": "07886028946",
                        "MobilePhone": "07886028947",
                        "Email": "jack@rank.com"
                    },
                    "AllowedMarketingContacts": {
                        "IsHomeContactallowed": true,
                        "IsMobileContactAllowed": true,
                        "IsEmailContactAllowed": true,
                        "IsSMSContactAllowed": true
                    }
                },
                "RejectionReasons" : [
                    {
                        "Reason" : "Already SAW"
                    },
                    {
                        "Reason" : "Deceased"
                    },
                    {
                        "Reason" : "Locally barred"
                    },
                    {
                        "Reason" : "Nationally barred"
                    },
                    {
                        "Reason" : "Refused membership"
                    },
                    {
                        "Reason" : "Self-cancelled"
                    },
                    {
                        "Reason" : "Suspended"
                    },
                    {
                        "Reason" : "Self-excluded"
                    },
                    {
                        "Reason" : "Take-a-break"
                    },
                    {
                        "Reason" : "Closed"
                    },
                    {
                        "Reason" : "Locked"
                    },
                    {
                        "Reason" : "Missing email"
                    },
                    {
                        "Reason" : "Missing mobile number"
                    },
                    {
                        "Reason" : "Email in use"
                    }
                ],
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/sawEligible",
                        "Method": "GET",
                        "AllowedScopes": [ "staffUpgradeCustomer", "onbehalfUpgradeCustomer" ]
                    },
                    "UpgradeToSaw": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/upgradeToSaw",
                        "Method": "POST",
                        "AllowedScopes": [ "staffUpgradeCustomer", "onbehalfUpgradeCustomer" ]
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Invalid fields"
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

### Upgrade to SAW [POST /customers/{identifier}/upgradeToSaw]

**Allowed scopes**: `staffUpgradeCustomer`, `onbehalfUpgradeCustomer`

This API will be called when a customer has an existing retail and either has an existing
digital account or requires a new digital account. If a customer has already got a digital account then
a new access token for `onbehalfUpgradeCustomer` scope must be obtained, supplying his digital
`username` and `password`. If `staffUpgradeCustomer` scope is used this indicates that a new
digital account should be created from the customer's known email address.

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (client credentials/resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body

            {
                "Pin": 1234
            }

+ Response 200 (application/json)
          
            {
                "_Links": {
                    "Journeys": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/journeys",
                        "Method": "GET"
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Invalid fields"
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

## Agreements [/customers/{identifier}/agreements]

### Get Agreements [GET]

**Allowed scopes**: `staffUpdateCustomerAgreement`

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

            {
                "Agreements": [
                    {
                        "AgreedDate": "2016-01-30",
                        "Type": "PoPF",
                        "_Links": {
                            "UpdateAgreement": {
                                "Href": "http://dev01-resapi.rankgrouptech.net/customers/agreements/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b",
                                "Method": "PUT",
                                "AllowedScopes": [ "staffUpdateCustomerAgreement" ]
                            }
                        }
                    }
                ],
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/agreements",
                        "Method": "GET",
                        "AllowedScopes": [ "staffUpdateCustomerAgreement" ]
                    }
                }
            }

+ Response 424 (application/json)

            {
                "Message": "Customer not found"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

### Update Agreement [PUT /customers/agreements/{identifier}]

**Allowed scopes**: `staffUpdateCustomerAgreement`

This API will be used to update Protection of Player Funds flag as an when is required by the terms.
Neon will get the information about the current PoPF status for the customer in lookup API call (above)
This functionality requires cusotmer to authorise in form of entering their correct PIN for the SAW account. Neon application will be required to generate a Resource owner token for the customer to be able to call this API.

Acceptable `Type` values: `PoPF`

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e
            
    + Body  
            
            {
                "AgreedDate": "2016-01-30",
                "Type": "PoPF"
            }

+ Response 204 (application/json)

+ Response 424 (application/json)

            {
                "Message": "Customer not found"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

## Suspensions [/customers/{identifier}/suspensions]

### Get Suspensions [GET]

**Allowed scopes**: `staffSetAccountSuspension`

Get all suspension information for a single customer

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request

    + Headers 
            
            Authorization: Bearer (client credentials token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body  
            
            {
                "Reason": "Bad behaviour",
                "From": "2016-01-30",
                "To": "2016-01-30",
                "Site": "12345",
                "Type": "SelfExcluded"
            }
           
+ Response 200 (application/json)
  
           {    
                "Suspensions": [
                    {
                        "From": "2016-01-30",
                        "ProposedTo": "2016-06-30",
                        "Channel": "Digital",
                        "Brand": "Grosvenor",
                        "Type": "SelfExcluded",
                        "_Links": {
                            "UpdateSuspension": {
                                "Href": "http://dev01-resapi.rankgrouptech.net/customers/suspensions/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b",
                                "Method": "PUT",
                                "AllowedScopes": [ "staffSetAccountSuspension" ]
                            },
                            "RemoveSuspension": {
                                "Href": "http://dev01-resapi.rankgrouptech.net/customers/suspensions/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b",
                                "Method": "DELETE",
                                "AllowedScopes": [ "staffRemoveAccountSuspension" ]
                            }
                        }
                    },
                    {
                        "From": "2016-01-30",
                        "To": "2016-02-30",
                        "Site": "67891",
                        "Channel": "Retail",
                        "Brand": "Grosvenor",
                        "Type": "Suspended",
                        "_Links": {
                            "UpdateSuspension": {
                                "Href": "http://dev01-resapi.rankgrouptech.net/customers/suspensions/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b",
                                "Method": "PUT",
                                "AllowedScopes": [ "staffSetAccountSuspension" ]
                            },
                            "RemoveSuspension": {
                                "Href": "http://dev01-resapi.rankgrouptech.net/customers/suspensions/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b",
                                "Method": "DELETE",
                                "AllowedScopes": [ "staffRemoveAccountSuspension" ]
                            }
                        }
                    }
                ],
                "_Links": {
                     "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/suspensions",
                        "Method": "GET",
                        "AllowedScopes": [ "staffSetAccountSuspension" ]
                    },
                    "AddSuspension": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/suspensions",
                         "Method": "POST",
                        "AllowedScopes": [ "staffSetAccountSuspension" ]
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

### Add Suspension [POST]

**Allowed scopes**: `staffSetAccountSuspension`

To update customer profile as barred/suspended by the SAW staff member by selecting a reason, and noting the details on why the SAW customer has been barred/suspended, and how long the barring/suspension will exist for.

Acceptable `Type` values:
* `Deceased` - self explanatory
* `Barred` - retail barring in one or more clubs, also mapped to Refused Membership in retail (which may be for one or more clubs)
* `Suspect` - equivalent to digital and retail Suspended status
* `SelfExcluded` - digital and/or retail self exclusion (self-cancellation for retail)
* `TakeABreak` - digital only, not allowed to play for a set period

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request

    + Headers 
            
            Authorization: Bearer (client credentials token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body  
            
            {
                "From": "2016-01-30",
                "To": "2016-01-30",
                "ProposedTo": "2016-01-30",
                "Site": "12345",
                "Channel": "Retail",
                "Brand": "Grosvenor",
                "Type": "SelfExcluded"
            }
           
+ Response 200 (application/json)
  
           {
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/suspensions",
                        "Method": "POST",
                        "AllowedScopes": [ "staffSetAccountSuspension" ]
                    },
                    "UpdateSuspension": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/suspensions/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b",
                        "Method": "PUT",
                        "AllowedScopes": [ "staffSetAccountSuspension" ]
                    },
                    "RemoveSuspension": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/suspensions/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b",
                        "Method": "DELETE",
                        "AllowedScopes": [ "staffRemoveAccountSuspension" ]
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

### Update Suspension [PUT /customers/suspensions/{identifier}]

**Allowed scopes**: `staffSetAccountSuspension`

To update customer profile as barred/suspended by the SAW staff member by selecting a reason, and noting the details on why the SAW customer has been barred/suspended, and how long the barring/suspension will exist for.

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request

    + Headers 
            
            Authorization: Bearer (client credentials token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body  
            
            {
                "From": "2016-01-30",
                "To": "2016-01-30",
                "ProposedTo": "2017-01-30",
                "Site": "12345",
                "Channel": "Retail",
                "Brand": "Grosvenor",
                "Type": "SelfExcluded"
            }
           
+ Response 200 (application/json)
  
            {
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/suspensions/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b",
                        "Method": "PUT",
                        "AllowedScopes": [ "staffSetAccountSuspension" ]
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }
 
### Remove Suspension [DELETE /customers/suspensions/{identifier}]

**Allowed scopes**: `staffRemoveAccountSuspension`

To update customer profile by removing the barred/suspended status

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request

    + Headers 
            
            Authorization: Bearer (client credentials token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 204 (application/json)

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

## Membership Cards [/customers/{identifier}/membershipCards]

### Get Registered Cards [GET]

**Allowed scopes**: `staffAddCard`

Allows registered customers get all assoicated cards
            
+ Request

    + Headers 
            
            Authorization: Bearer (client credentials token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e
    
+ Response 200 (application/json)
    
            {
                "MembershipCards": [
                    {
                        "CardNumber" : 123123123
                    }
                ],
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/membershipCards",
                        "Method": "GET",
                        "AllowedScopes": [ "staffAddCard" ]
                    },
                    "RegisterOrReplaceMembershipCard": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/membershipCards",
                        "Method": "PUT",
                        "AllowedScopes": [ "staffAddCard" ]
                    }
                }
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

### Register or Replace a Card [PUT]

**Allowed scopes**: `staffAddCard`

Allows registered customers to add new or additional cards
            
+ Request

    + Headers 
            
            Authorization: Bearer (client credentials token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e
    
    + Body
    
            {
                "CardNumber" : 123123123
            }
            
+ Response 200 (application/json)

           {
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/membershipCards",
                        "Method": "PUT",
                        "AllowedScopes": [ "staffAddCard" ]
                    }
                }
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }
            
## Security [/customers/{identifier}/authentication/pinAuth/requestChange]

### Request PIN Change [POST]

**Allowed scopes**: `staffRequestChangePin`

Allows a member of staff to request a pin change on behalf of the customer. This is for when the customer has forgotten thier current pin. Once requested the customer will complete the journey on their own device.

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request

    + Headers 
            
            Authorization: Bearer (client credentials token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

           {
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/authentication/pinAuth/requestChange",
                        "Method": "POST",
                        "AllowedScopes": [ "staffRequestChangePin" ]
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Account Locked"
            }

+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

## Wallet [/customers/{identifier}/finances]

The following endpoints are exposed, in order to provide and interface for interactions with customer's SAW.

### View Balance [GET]

**Allowed scopes**: `clientWalletGetBalance`, `staffWalletGetBalance`

This API will be return amount of funds available in SAW wallets along with specific calculated balances. It will also include funds allowed to be deposited or withdrawn based on limits set for the customer in the F&P tactical engine.

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request

    + Headers 
            
            Authorization: Bearer (client credentials/resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

            {
                "Balances": {
                    "TotalCash": 1000.55,
                    "TotalDigital": 500.00,
                    "TotalRetail": 700.55,
                    "AvailableToWithdraw": 600.00,
                    "AvailableToTransferToRetailGame": 0.00
                },
                "Limits": [
                    {
                        "Name": "TacticalWithdrawalLimit",
                        "RemainingAmount": 100.00
                    },
                    {
                        "Name": "TacticalDepositLimit",
                        "RemainingAmount": 350.00
                    },
                    {
                        "Name": "ResponsibleGamblingLimit",
                        "IsActive": true
                    }
                ],
                "LastCalculatedDateTime": "2016-03-15T14:32:22Z",
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances",
                        "Method": "GET",
                        "AllowedScopes": [ "clientWalletGetBalance", "staffWalletGetBalance" ]
                    },
                    "Transfer": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances/transfers/{transactionId}",
                        "Method": "POST",
                        "AllowedScopes": [ "clientWalletTransfer", "onbehalfWalletTransfer" ]
                    }
                }
            }

+ Response 424 (application/json)

            {
                "Message": "Customer not found"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Couldn't process the transaction. {System X} is unavailable."
            }

### Transfer [POST /customers/{identifier}/finances/transfers/{transactionId}]

**Allowed scopes**: `clientWalletTransfer`, `onbehalfWalletTransfer`

This API endpoint is used for transfers such as placing funds into SAW (deposits and cashouts from retail games) and removed funds from SAW (withdrawals and transfers to retail games).

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)
    + transactionId: `000000001-001` (string, required)

+ Request (application/json)

    Remove funds from SAW

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body
    
            {
                "Withdraw": {
                    "Amount": 100.99
                }
            }

+ Request (application/json)

    Place funds into SAW

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body
    
            {
                "Deposit": {
                    "Amount": 100.99
                }
            }

+ Response 200 (application/json)

    Transaction successfully processed
    
    + Body
    
            {
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances/transfers/000000001-001",
                        "Method": "POST",
                        "AllowedScopes": [ "clientWalletTransfer", "onbehalfWalletTransfer" ]
                    },
                    "ViewBalance": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances",
                        "Method": "GET",
                        "AllowedScopes": [ "clientWalletGetBalance", "staffWalletGetBalance" ]
                    },
                    "Transfer": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances/transfers/{transactionId}",
                        "Method": "POST",
                        "AllowedScopes": [ "clientWalletTransfer", "onbehalfWalletTransfer" ]
                    },
                    "GetWalletTransactionStatus": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/transactions/000000001-001",
                        "Method": "GET",
                        "AllowedScopes": [ "staffWalletGetTransactionStatus" ]
                    }
                }
            }

+ Response 202 (application/json)

    Undetermined state of transaction
    
    + Body
    
            {
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances/transfers/000000001-001",
                        "Method": "POST",
                        "AllowedScopes": [ "clientWalletTransfer", "onbehalfWalletTransfer" ]
                    },
                    "ViewBalance": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances",
                        "Method": "GET",
                        "AllowedScopes": [ "clientWalletGetBalance", "staffWalletGetBalance" ]
                    },
                    "Transfer": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b/finances/transfers/{transactionId}",
                        "Method": "POST",
                        "AllowedScopes": [ "clientWalletTransfer", "onbehalfWalletTransfer" ]
                    },
                    "GetWalletTransactionStatus": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/transactions/000000001-001",
                        "Method": "GET",
                        "AllowedScopes": [ "staffWalletGetTransactionStatus" ]
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "The requested amount exceeds available funds"
            }
            
+ Response 400 (application/json)

            {
                "Message": "The specified amount exceeds tactical deposit limit"
            }
            
+ Response 400 (application/json)

            {
                "Message": "The requested amount exceeds tactical withdrawal limit"
            }

+ Response 400 (application/json)

            {
                "Message": "The specified amount is invalid"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "The latest version of PoPF is not signed off"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Couldn't process the transaction. {System X} is unavailable."
            }

# Group Transactions

This API allows to get details of a particular transaction.

## Wallet Transactions [/transactions/{transactionId}]

### Get Wallet Transaction Status [GET]

**Allowed scopes**: `staffWalletGetTransactionStatus`

This endpoint provides transaction status and details based on the transaction ID supplied.
All `Details` fields are optional and will be provided only if available in the transaction log.

+ Parameters
    + transactionId: `000000001-001` (string, required)
    
+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (client credentials token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

            {
                "Status": "Succeeded",
                "Details" : {
                    "RetailId": "12345678",
                    "DigitalId": 519490721066127360,
                    "TransferId": "ccef74ff-414a-4a65-b961-eccb245927f8"
                },
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/transactions/000000001-001",
                        "Method": "GET",
                        "AllowedScopes": [ "staffWalletGetTransactionStatus" ]
                    }
                }
            }
            
+ Response 200 (application/json)

            {
                "Status": "Undetermined",
                "Details" : {
                    "RetailId": "12345678",
                    "DigitalId": 519490721066127360,
                    "TransferId": "ccef74ff-414a-4a65-b961-eccb245927f8"
                },
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/transactions/000000001-001",
                        "Method": "GET",
                        "AllowedScopes": [ "staffWalletGetTransactionStatus" ]
                    }
                }
            }
            
+ Response 200 (application/json)

            {
                "Status": "Failed",
                "Details" : {
                    "RetailId": "12345678",
                    "DigitalId": 519490721066127360,
                    "TransferId": "ccef74ff-414a-4a65-b961-eccb245927f8"
                },
                "_Links": {
                    "Self": {
                        "Href": "http://dev01-resapi.rankgrouptech.net/transactions/000000001-001",
                        "Method": "GET",
                        "AllowedScopes": [ "staffWalletGetTransactionStatus" ]
                    }
                }
            }

+ Response 425 (application/json)

            {
                "Message": "Trasaction Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }