FORMAT: 1A
HOST: https://dev01-res.meccabingo.com/

# RES.API.SAW - Draft

Rank Enterprise Services API is a collection of business services exposed over a RESTful inteface.

# Correlation Tokens

Correlation tokens are used for the tracking and debugging purposes. It is a string value,
which could represent GUID, unique message or transaction ID. The correlation token must
be supplied as `X-Correlation-Token` HTTP header to every request to RES API. It must be
unique for each request in scope of the same client. The correlation token's uniqueness
is guaranteed by the client.

# Authentication

RES API authentication uses OpenID connect for identity, aligned with the [OAuth2](http://oauth.net/2/) protocol. 

Clients will be issued with a `client_id` and `client_secret` that must be provided for token requests. 

<a name="tokens"></a>
## Access Tokens

All requests to RES resources require the client application to provide an appropriate access token. These tokens are provided in the Authorization header as Bearer tokens. e.g.

```
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSIsImtpZCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9.eyJjbGllbnRfaWQiOiJiZWRlLWdyb3N2ZW5vci1jbXMiLCJzY29wZSI6InJlYWRfZ3Jvc3Zlbm9ybG95YWx0eSIsImlzcyI6Imh0dHBzOi8vaWRzcnYzLmNvbSIsImF1ZCI6Imh0dHBzOi8vaWRzcnYzLmNvbS9yZXNvdXJjZXMiLCJleHAiOjE0MzU5Mzk5NzQsIm5iZiI6MTQzNTkzOTYxNH0.nGLoo8B_enlzdY2OX_sf0d1IEGbAUOL8E_-Dl94owI_rnxRrtvumz6fIGx8L5hTXzl8-GlM0Edfb3fe9cD49JDUbWuh0fYnBTjj4SnALv6DSmYSFHeDBkbbbzwI4QVuERblfeGB04ZAEDCjZlLoL4uly-lE8Oq2E150R83u43i8zDfYqKpPp1D5rvhOvdnOg4q3coICHqGkFzsg_0wfEwaYUgc2AWCuyy7ry4pEnV8cg7BVA3GOldkY5jsE062SP4T-N-UjzKd3Lz1KG0bBYZPfJ2CwV2oTgTnwEAkubIqdfYLm_bXMz8sQwm4I_V22qMDhavYwYBhFp1vQdWoYD2A
```

### Token validation
Access tokens are fully signed [Json Web Tokens](http://jwt.io/) and should be validated by the client. Many libraries exist for all platforms that support validating tokens. The details of RES's authentication certificates used to sign token are documented below under the core resoure.

<a name="client-credentials-access-token"></a>
## Client Credentials Access Token
The provided token is utilised for resources where no player session is required, currently this token flow is used for all API end points.

**Example request**

`client_id:client_secret` Base64 encoded, e.g. `YmVkZS1ncm9zdmVub3ItY21zOnNlY3JldA==` and passed in the `Authorization` header

```
POST /api/core/connect/token HTTP/1.1
Content-Type: application/x-www-form-urlencoded
Authorization: Basic YmVkZS1ncm9zdmVub3ItY21zOnNlY3JldA==
Body: grant_type=client_credentials&scope=res
```

**Example response**

```
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSIsImtpZCI6ImEzck1VZ01Gdjl0UGNsTGE2eUYzekFrZnF1RSJ9.eyJjbGllbnRfaWQiOiJiZWRlLWdyb3N2ZW5vci1jbXMiLCJzY29wZSI6InJlYWRfZ3Jvc3Zlbm9ybG95YWx0eSIsImlzcyI6Imh0dHBzOi8vaWRzcnYzLmNvbSIsImF1ZCI6Imh0dHBzOi8vaWRzcnYzLmNvbS9yZXNvdXJjZXMiLCJleHAiOjE0MzU5Mzk5NzQsIm5iZiI6MTQzNTkzOTYxNH0.nGLoo8B_enlzdY2OX_sf0d1IEGbAUOL8E_-Dl94owI_rnxRrtvumz6fIGx8L5hTXzl8-GlM0Edfb3fe9cD49JDUbWuh0fYnBTjj4SnALv6DSmYSFHeDBkbbbzwI4QVuERblfeGB04ZAEDCjZlLoL4uly-lE8Oq2E150R83u43i8zDfYqKpPp1D5rvhOvdnOg4q3coICHqGkFzsg_0wfEwaYUgc2AWCuyy7ry4pEnV8cg7BVA3GOldkY5jsE062SP4T-N-UjzKd3Lz1KG0bBYZPfJ2CwV2oTgTnwEAkubIqdfYLm_bXMz8sQwm4I_V22qMDhavYwYBhFp1vQdWoYD2A",
    "expires_in": 600,
    "token_type": "bearer"
}
```

### Token expiration

The access tokens have an expiration time defined in the token claims and duplicated for simplicity in the response body. After `expires_in` seconds, clients applications will need to make another client credentials request to get a new access token for subsequent operations requiring a client access token.

<a name="resource-owner-access-token"></a>
## Resource Owner Access Token
Resource owner access tokens are required to access resources where an authenticated customer is expected. Note that to generate a resource owner access token, client credentials should also be supplied using the Authorization header as shown. 

**Example request**

`client_id:client_secret` Base64 encoded, e.g. 98712389abc and passed in the Authorization header

**channel** - The parameter identifies the way **username** and **password** are interpreted. The following values are supported: `retail`, `digital`. If not specified then defaults to `retail`.

**username** - Username of the resource owner (customer) for `digital` or membership number for `retail`. Always required.

**password** - Password of the resource owner (customer) for `digital` or PIN for `retail`. Always required.

**venue_id** - Identifier of a venue where a call to RES comes from. Always required.

**game_category** - The game category (e.g. slots, table game). Required for certain scopes (see [Scopes](#scopes) table below).

**location_id** - Identifier of a device/machine calling RES. Always required.

**staff_id** - Identifier of a member of staff calling RES. Required only when a member of staff initiates an API call (see [Scopes](#scopes) table below).

```
POST /api/core/connect/token
Content-Type: application/x-www-form-urlencoded
Authorization: Basic 98712389abc
```

```
grant_type=password
&scope=res
&channel=retail
&username=<membershipNumber/username>
&password=<pin/password>
&venue_id=50601
&game_category=slots
&location_id=AR01
&staff_id=cashier4
```

**Example response**

```
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.ew0KICAiY2xpZW50X2lkIjogInJlcyIsDQogICJzY29wZSI6IFsNCiAgICAic3BpbmUiLA0KICAgICJzaXRlY29kZSINCiAgXSwNCiAgInN1YiI6ICI2Mzk3MTk5MTk4MzUwMjU0MTIiLA0KICAiR2FtZVRva2VuIjogIldzMkY3a1NwMmRaWlZHWlRNWU1yRU1yYVJ5QXFwU1BDS2ZHWUl6SFhFbXVjNUM5dzdVYlM0dk5zZFIwa01LUlV1SDVpRWdwSWI2LVd0REpVMkMwQlliTDROZXlGRGpTVW9namtiMjY5RGF3MSIsDQogICJhbXIiOiAicGFzc3dvcmQiLA0KICAiYXV0aF90aW1lIjogMTQyOTI4NjE5NywNCiAgImlkcCI6ICJpZHNydiIsDQogICJpc3MiOiAiaHR0cDovL2V3MS1xYTAxLTUwMS5jbG91ZGFwcC5uZXQ6ODg4OC9jb3JlIiwNCiAgImF1ZCI6ICJodHRwOi8vZXcxLXFhMDEtNTAxLmNsb3VkYXBwLm5ldDo4ODg4L2NvcmUvcmVzb3VyY2VzIiwNCiAgImV4cCI6IDE0MjkyODY3OTgsDQogICJuYmYiOiAxNDI5Mjg2MTk4DQp9.eqvm-4vOF6s7Iwpqfd01qa4ZkwSMkQiVgNFNCqdjX-hX843pUtGTM2XdEIBwvwf4OxldptRtYl5gdAcChXJcZf2TLXhxnznP4uPMQsvEXlm3qy44uHXj8phlEsQELC2CydcVUa-C6sZV0RXJ-QNfUo2sGQQwnX7rWP19Byf-Z6QzmaJFkSWU8yOl45qxfSu3XDmf4GyQpBPnn5YBi8FWuK7R2QSBdK3JFlQ9VvHyk7QeDQhfMg1OJdP1JfbXbi_V3WN3cD700hx_f2f_mVS6o_VYEHBh9IPb7wsCcSfR33BKKlXFUraKdttIwYjQL-frEmpOzI2mQDGg2de_PodU-w",
    "expires_in": 600,
    "token_type": "bearer",
    "refresh_token": "1cf75ed7e40723b64bbe29eb2f2654b8"
}
```

## Resource Owner Access Token Refresh

Resource owner access tokens have an expiration time defined both in the response above and inside the token claims, shown in seconds. Unlike the client credentials access token, resource owner tokens provide a specific refresh operation to allow the client application to extend the life of the session without requiring customer authentication details to be resupplied.

**Example Request**

```
POST /api/connect/token
Content-Type: application/x-www-form-urlencoded
Authorization: Basic 98712389abc

grant_type=refresh_token
&refresh_token=1cf75ed7e40723b64bbe29eb2f2654b8
```

**Example Response**

```
{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Im5kcnRheVk3c0tuSjZSY3ZCRjlLZl9BU3B0SSIsImtpZCI6Im5kcnRheVk3c0tuSjZSY3ZCRjlLZl9BU3B0SSJ9.eyJjbGllbnRfaWQiOiJ0Y3MiLCJzY29wZSI6WyJnYW1lVG9rZW4iLCJvZmZsaW5lX2FjY2VzcyIsInNpdGVjb2RlIiwic3BpbmUiXSwic3ViIjoiNjQ0MTM5MTk1ODYxOTY2ODQ4IiwiYW1yIjoicGFzc3dvcmQiLCJhdXRoX3RpbWUiOjE0NDI1MDQxMTUsImlkcCI6Imlkc3J2IiwiZ2FtZVRva2VuIjoiRExlZS0zNHhuNDBxcEowVWpZUzRWV1VIdFQzY2Zmb05oOU1qVjcxRVNocWJ6QVBBRjUyWWdnX2I4ZmZjT0JvbUVaRDdScnVzNlg3X3YxZ0dHeXNlNnRvNWIwTEs2S2otWmhZa2xjMGlSelkxIiwic2l0ZWNvZGUiOiJncm9zdmVub3JjYXNpbm9zLmNvbSIsImlzcyI6Imh0dHA6Ly9ldzEtcWEwMS01MDEtaWxiLmFkLmJlZGVnYW1pbmcuY29tOjg4ODgvY29yZSIsImF1ZCI6Imh0dHA6Ly9ldzEtcWEwMS01MDEtaWxiLmFkLmJlZGVnYW1pbmcuY29tOjg4ODgvY29yZS9yZXNvdXJjZXMiLCJleHAiOjE0NDI1MDQ0MTUsIm5iZiI6MTQ0MjUwNDExNX0.NW3YVYwmdibBYkRgx1TveOVBDA3-x7W9D_R3tkL5-DOgiTEbirVeDH6kC4Pwy2oBbJyZhxK4pzyIbynm2LjeWtf36qn_JW40UX0POJX7WTv4J-HHja2ExB2xCmvPMpQtv1V9GnuHz7yuxMr_IdNrBfedfFiwtmf2j2AILQsgjvsDLjr2U7MSyyGozwRRvtbU6ZkOm6zNxAonblDtmlPZmFvlJ8p8EZ-f37s9Vyc_-oDgF8qm5AQpvjrII7OsIMeWbaJtjmf6EgSjzeDnXaIvmdlo_RNozIcLDCmndXbLRmhLiJ5_r1aEGJXqvmZPXU1J5Sx7i2XbS2q5koLfVmYRNA",
    "expires_in": 600,
    "token_type": "bearer",
    "refresh_token": "2cd75ed7e40723b64bbe29eb2f2654b8"
}
```

<a name="scopes"></a>
## Scopes

In order to access any resource provided by RES, the client should provide a token of a certain type obtained for appropriate scopes.
The relation between resources and allowed scopes is reflected in each endpoint's description.
The following table explains what should be supplied as a part of auth server request in order to get a token with a particular scope issued.

|Authentication type|Token type|Required parameters|Available scopes|
|-------------------|----------|-------------------|----------------|
|Read-only operations|Client Credentials Token|clientId <br/>clientSecret |readonlyCustomerSearch|
|Member of staff performing an operation|Client Credentials Token|clientId <br/>clientSecret <br/>venue_id <br/>location_id <br/>staff_id <br/>username |staffSetAccountSuspension <br/>staffRemoveAccountSuspension <br/>staffRemoveSelfExclusion <br/>staffWalletGetBalance <br/>staffUpdateCustomerPersonal <br/>staffUpdateCustomerComms <br/>staffUpdateCustomerPopf <br/>staffRegisterRetailCustomer <br/>staffUpgradeCustomer <br/>staffWalletGetTransactionStatus|
|Customer performing action themselves in a venue|Resource Owner Token|clientId <br/>clientSecret <br/>venue_id <br/>location_id <br/>game_category <br/>username <br/>password |clientChangePin <br/>clientWalletWithdraw <br/>clientWalletDeposit <br/>clientWalletGetBalance|
|Staff operating on behalf of a customer|Resource Owner Token|clientId <br/>clientSecret <br/>venue_id <br/>location_id <br/>staff_id <br/>username <br/>password |onbehalfWalletWithdraw <br/>onbehalfWalletDeposit <br/>onbehalfSetSelfExclusion <br/>onbehalfRequestChangePin <br/>onbehalfAddCard <br/>onbehalfUpdateCard|

## Authentication flow

The following diagram depicts the sequence of interactions between client and the main RES components in context of authentication process:

![Authentication flow](https://rankgroup.atlassian.net/wiki/download/attachments/102989835/Authentication%20flow.png?api=v2)

(1) - The client requests [an access token](#tokens) from Identity Provider (IDP).
The type of the token (see [Client Credentials Access Token](#client-credentials-access-token),
[Resource Owner Access Token](#resource-owner-access-token)) and parameters to be
supplied depend on the [scopes](#scopes) required to perform an operation over a resource.

(2) - Token of the requested type is issued by IDP and returned to the client.

(3) - The client calls RES API.
The obtained token must be supplied to the request as `Authorization` HTTP header.

(4) - RES communicates to IDP, in order to validate the token provided by the client.

(5) - IDP responds with the token validation result.
If token is expired, compromised or revoked then the result will be negative, otherwise positive.

(6) - Once the token is validated, RES carries on processing the client's request and responds accordingly.

# Group Journeys

This API is HATEOAS-based entry point for a client.

## Initial Journeys [/journeys]

This endpoint provides HAREOAS-centric set of links to resources and actions available to the client, based upon the token supplied.

### Scope: any [GET]

+ Request

    + Headers 
            
            Authorization: Bearer (client credential/resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

    "Customer performing action themselves in a venue" token supplied
    
    + Body

            {
                "_Links": {
                    "Self": {
                        "Href": "/journeys"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/456789/finances"
                    },
                    "Deposit": {
                        "Href": "/customers/123456/memberships/456789/finances/wallets/withdraw{?transactionId}"
                    },
                    "Withdraw": {
                        "Href": "/customers/123456/memberships/456789/finances/wallets/deposit{?transactionId}"
                    },
                    "ChangePin": {
                        "Href": "/customers/123456/memberships/456789/authentication"
                    }
                }
            }

+ Response 200 (application/json)

    No journeys available
    
    + Body

            {
                "_Links": {
                    "Self": {
                        "Href": "/journeys"
                    }
                }
            }

# Group Customers

## Profile [/customers]

This is a dedicated aggregated endpoint for Customer services.
This endpoint is a replacement for the existing Grosvenor Customer look service provided by RES v1 API. BEDE uses this API to look customer's retail profile when they chose to join the website. This version of the API includes IsSawCustomer flag, BEDE use this flag to determine whether to present customer with the "digital conversion" journey or not

Model for the resource if defined below:
| Name                  | Type      | Required      | Description                                                                          |Example        |
|:---                   |:---       |:---           |:---                                                                                  |:---           |
|Title                  |string[25] |**yes**        |Mr, Mrs, Miss, ...                                                                    |"Mr"           |
|Forename               |string[40] |**yes**        |                                                                                      |"John"         |
|Surname                |string[40] |**yes**        |                                                                                      |"Jackson"      |
|PartyAddresses         |array      |**yes**        |                                                                                      |"Flat 2, 10 Downing Street"        |
|Gender                 |string[7]  |**yes**        |Values are Unknown, Female and Male                                                    |"Male"         |
|DateOfBirth            |string     |**yes**        |                                                                                       |"1955-01-30"   |
|Verifications          |array      |**optional**   |if customer has decided to self-exclude from the retail channel                        |true           |
|Suspensions            |array      |**optional**   |if customer is suspended from the casino globally                                      |true           |
|Memberships            |array      |**yes**        |2 dimentional array, holds membership CardNumber and Status                                                                                        

For registration following input validation in place

**Following fields must follow a valid format:**
- Email address - valid email format
- ContactDetails.HomePhone,BusinessPhone & MobilePhone - starts with 0 or +, followed by 9/10 digits, it allows optional spacing between digits to conform the popular/acceptable format (i.e. 078 8602 8945, +44 78 8602 9845, etc)
- Address.Postcode - valid UK postcode for UK addresses
- DateOfBirth - must be of legal age (18)

### Search by Membership Card [GET /customers?cardNo={cardNo}&dateOfBirth={dateOfBirth}]

**Allowed scopes**: readonlyCustomerSearch

Endpoint for customer lookup from Bede using Membership Number (card no) and date of birth

+ Parameters
    + cardNo: `123456` (string, required)
    + dateOfBirth: `2001-12-12` (date, required)
    
+ Request

    + Headers 
            
            Authorization: Bearer (client credential token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

            {
                "Name": {
                    "Title": "Mr",
                    "FirstName": "John",
                    "MiddleName": "Dan",
                    "LastName": "Jackson"
                },
                "Address": {
                    "Line1": "Flat 57",
                    "Line2": "10 Downing Street",
                    "Town": "London",
                    "Postcode": "WC2B 4AA",
                    "County": "Greater London",
                    "Country": "United Kingdom",
                    "CountryCode3": "GBR"
                },
                "ContactDetails": {
                    "HomePhone": "01234567890",
                    "BusinessPhone": "01234567890",
                    "MobilePhone": "01234567890",
                    "Email": "jack@rank.com"
                },
                "AllowedMarketingContacts": {
                    "IsHomeContactallowed": true,
                    "IsMobileContactAllowed": true,
                    "IsEmailContactAllowed": true,
                    "IsSMSContactAllowed": true
                },
                "RetailId": "12345678",
                "DigitalId": "12345678",
                "DigitalUsername": "userjohn33",
                "DateOfBirth": "1955-01-30",
                "Gender": "M",
                "FirstRegisteredClubNumber": "45611",
                "IsDeceased": false,
                "Nationality": "GB",
                "Occupation": "Clerk",
                "PopfAgreedDate": "2016-09-12",
                "PopfVersionDate": "2016-01-01",
                "VipGrade": "Black",
                "_Links": {
                    "Self": {
                        "Href": "/customers?cardno={cardno}&dateOfBirth={dateOfBirth}",
                        "Method": "GET",
                        "AllowedScopes": "readonlyCustomerSearch"
                    },
                    "UpdateCustomer": {
                        "Href": "/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b",
                        "Method": "PUT",
                        "AllowedScopes": "staffUpdateCustomerPersonal"
                    }
                }
            }

+ Response 204 (application/json)

+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

### Update Customer [PUT /customers/{identifier}]

**Allowed scopes**: staffUpdateCustomerPersonal

This API is to update an existing customers information once they have been identified as a SAW customer.

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body
    
            {
                "Name": {
                    "Title": "Mr",
                    "FirstName": "John",
                    "MiddleName": "Dan",
                    "LastName": "Jackson"
                },
                "Address": {
                    "Line1": "Flat 57",
                    "Line2": "10 Downing Street",
                    "Town": "London",
                    "Postcode": "WC2B 4AA",
                    "County": "Greater London",
                    "Country": "United Kingdom",
                    "CountryCode3": "GBR"
                },
                "ContactDetails": {
                    "HomePhone": "01234567890",
                    "BusinessPhone": "01234567890",
                    "MobilePhone": "01234567890",
                    "Email": "jack@rank.com"
                },
                "AllowedMarketingContacts": {
                    "IsHomeContactallowed": true,
                    "IsMobileContactAllowed": true,
                    "IsEmailContactAllowed": true,
                    "IsSMSContactAllowed": true
                },
                "DateOfBirth": "1955-01-30",
                "Gender": "M",
                "Nationality": "GB",
                "Occupation": "Clerk",
                "_Links": {
                    "Self": {,
                        "Href": "/customers/86e018ce-ef7d-4c92-ae54-8f0c41d46c7b",
                        "Method": "PUT",
                        "AllowedScopes": "staffUpdateCustomerPersonal"
                    }
                }
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer not found"
            }
            
+ Response 400 (application/json)

            {
                "Message": "Invalid fields"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }
           
### Register Retail Customer [POST]

**Allowed scopes**: staffRegisterRetailCustomer

This API will be called when a customer has had a new retail account created. This will create a record within Rank systems except digital

+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (client credential token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e
    
    + Body
    
            {
                "Name": {
                    "Title": "Mr",
                    "FirstName": "John",
                    "MiddleName": "Dan",
                    "LastName": "Jackson"
                },
                "Address": {
                    "Line1": "Flat 57",
                    "Line2": "10 Downing Street",
                    "Town": "London",
                    "Postcode": "WC2B 4AA",
                    "County": "Greater London",
                    "Country": "United Kingdom",
                    "CountryCode3": "GBR"
                },
                "ContactDetails": {
                    "HomePhone": "01234567890",
                    "BusinessPhone": "01234567890",
                    "MobilePhone": "01234567890",
                    "Email": "jack@rank.com"
                },
                "AllowedMarketingContacts": {
                    "IsHomeContactallowed": true,
                    "IsMobileContactAllowed": true,
                    "IsEmailContactAllowed": true,
                    "IsSMSContactAllowed": true
                },
                "RetailId": "12345678",
                "DateOfBirth": "1955-01-30",
                "Gender": "M",
                "FirstRegisteredClubNumber": "45611",
                "Nationality": "GB",
                "Occupation": "Clerk",
                "VipGrade": "Black",
                "_Links": {
                    "Self": {
                        "Href": "/customers",
                        "Method": "POST",
                        "AllowedScopes": "staffRegisterRetailCustomer"
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Invalid fields"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

## Upgrade to SAW [/customers/saw]

### Can Create SAW [GET /customers/{identifier}/canCreateSaw]

**Allowed scopes**: staffUpgradeCustomer

This API will be called when a customer has an existing retail or digital accounts. If a customer has a digital account then the player id should be supplied. The player id can be obtained by performaing a username search.

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)
    
+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (client credential token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

            {
                "CanCreateSAW" : true,
                "CanEnterClub" : true,
                "DigitalAccountCount" : 0,
                "RetailAccountIds" : [
                    "12345678", 
                    "87654321"
                ],
                "GoldenRecord" : {
                   "Name": {
                        "Title": "Mr",
                        "FirstName": "John",
                        "MiddleName": "Dan",
                        "LastName": "Jackson"
                    },
                    "Address": {
                        "Line1": "Flat 57",
                        "Line2": "10 Downing Street",
                        "Town": "London",
                        "Postcode": "WC2B 4AA",
                        "County": "Greater London",
                        "Country": "United Kingdom",
                        "CountryCode3": "GBR"
                    },
                    "ContactDetails": {
                        "HomePhone": "01234567890",
                        "BusinessPhone": "01234567890",
                        "MobilePhone": "01234567890",
                        "Email": "jack@rank.com"
                    },
                    "AllowedMarketingContacts": {
                        "IsHomeContactallowed": true,
                        "IsMobileContactAllowed": true,
                        "IsEmailContactAllowed": true,
                        "IsSMSContactAllowed": true
                    },
                    "DateOfBirth": "1955-01-30",
                    "Gender": "M",
                    "Nationality": "GB",
                    "Occupation": "Clerk",
                    "VipGrade": "Black"
                },
                "RejectionReasons" : [
                    {
                        "Reason" : "Already SAW"
                    },
                    {
                        "Reason" : "Deceased"
                    },
                    {
                        "Reason" : "Locally barred"
                    },
                    {
                        "Reason" : "Nationally barred"
                    },
                    {
                        "Reason" : "Refused membership"
                    },
                    {
                        "Reason" : "Self-cancelled"
                    },
                    {
                        "Reason" : "Suspended"
                    },
                    {
                        "Reason" : "Self-excluded"
                    },
                    {
                        "Reason" : "Take-a-break"
                    },
                    {
                        "Reason" : "Closed"
                    },
                    {
                        "Reason" : "Locked"
                    },
                    {
                        "Reason" : "Missing email"
                    },
                    {
                        "Reason" : "Missing mobile number"
                    },
                    {
                        "Reason" : "Email in use"
                    }
                ],
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw?transactionId=000000001-001"
                    },
                    "UpgradeSAW": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    }
                }
            }


+ Response 400 (application/json)

            {
                "Message": "Invalid fields"
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

### Upgrade to SAW [POST /customers/{identifier}/upgradeToSaw]

**Allowed scopes**: staffUpgradeCustomer

This API will be called when a customer has an existing retail and either has an existing digital account or requires a new digital account. If a customer has a digital account then the username will be supplied, else NULL indicating a new account should be created from the Customers known Email address

+ Parameters
    + identifier: `86e018ce-ef7d-4c92-ae54-8f0c41d46c7b` (string, required)

+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (client credential token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body
    
            {
                "Pin": 1234,
                "DigitalUsername" : "johnSilver777"
            }

+ Response 200 (application/json)
          
           {
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw?transactionId=000000001-001"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Agreements": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit{?transactionId}"
                    },
                    "Communication": {
                        "Href": "/transactions/000000001-001"
                    },
                    "Edit": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Invalid fields"
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

## Agreements [/customers/{partyId}/memberships/{membershipName}:{membershipKey}/memberships/agreements]

### Update Agreements [PATCH]

**Allowed scopes**: staffUpdateCustomerPopf

This API will be used to update Protection of Player Funds flag as an when is required by the terms.
Neon will get the information about the current PoPF status for the customer in lookup API call (above)
This functionality requires cusotmer to authorise in form of entering their correct PIN for the SAW account. Neon application will be required to generate a Resource owner token for the customer to be able to call this API.

+ Request

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e
            
    + Parameters
        + partyId: `123456` (string, required)
        + membershipName: `RES` (string, required)
        + membershipKey: `111222333` (string, required)
            
    + Body  
            
            {
                "VersionDate": "2016-01-30",
                "AgreedDate": "2016-01-30",
                "AgreementType": "PoPF"
            }

+ Response 200 (application/json)

           {
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw?transactionId=000000001-001"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Agreements": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit{?transactionId}"
                    },
                    "Communication": {
                        "Href": "/transactions/000000001-001"
                    },
                    "Edit": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }

+ Response 424 (application/json)

            {
                "Message": "Customer not found"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

## Suspensions [/customers/{partyId}/suspensions/]

### Add Suspension [POST]

**Allowed scopes**: staffSetAccountSuspension

To update customer profile as barred/suspended by the SAW staff member by selecting a reason, and noting the details on why the SAW customer has been barred/suspended, and how long the barring/suspension will exist for.

+ Request

    + Headers 
            
            Authorization: Bearer (client credential token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Parameters
        + partyId: `123456` (string, required)

    + Body  
            
            {
                "Reason": "Bad behaviour",
                "From": "2016-01-30",
                "To": "2016-01-30",
                "Site": "12345",
                "Type": "SelfExcluded"
            }
           
+ Response 200 (application/json)
  
           {
                "_Links": {
                    "Self": {
                        "Href": "/customers/suspensions/123456"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Agreements": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit{?transactionId}"
                    },
                    "Communication": {
                        "Href": "/transactions/000000001-001"
                    },
                    "Edit": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

### Update Suspension [PUT]

**Allowed scopes**: staffSetAccountSuspension

To update customer profile as barred/suspended by the SAW staff member by selecting a reason, and noting the details on why the SAW customer has been barred/suspended, and how long the barring/suspension will exist for.

+ Request

    + Headers 
            
            Authorization: Bearer (client credential token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body  
            
            {
                "Reason": "Bad behaviour",
                "From": "2016-01-30",
                "To": "2016-01-30",
                "Site": "12345",
                "Type": "SelfExcluded"
            }
           
+ Response 200 (application/json)
  
           {
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw?transactionId=000000001-001"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Agreements": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit{?transactionId}"
                    },
                    "Communication": {
                        "Href": "/transactions/000000001-001"
                    },
                    "Edit": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }
 
### Remove Suspension [DELETE]

**Allowed scopes**: staffRemoveAccountSuspension

To update customer profile by removing the barred/suspended status

+ Request

    + Headers 
            
            Authorization: Bearer (client credential token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)
  
           {
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw?transactionId=000000001-001"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Agreements": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit{?transactionId}"
                    },
                    "Communication": {
                        "Href": "/transactions/000000001-001"
                    },
                    "Edit": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

## Membership Cards [/customers/{partyId}/memberships/{membershipName}:{membershipKey}/membershipCards]

### Register New Card [POST]

**Allowed scopes**: onbehalfAddCard

Allows registered customers to add new or additional cards

+ Request

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e
            
    + Parameters
        + partyId: `123456` (string, required)
        + membershipName: `RES` (string, required)
        + membershipKey: `111222333` (string, required)
    
    + Body
    
            {
                "CardNumber" : 123123123
            }
            
+ Response 200 (application/json)
  
           {
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw?transactionId=000000001-001"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Agreements": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit{?transactionId}"
                    },
                    "Communication": {
                        "Href": "/transactions/000000001-001"
                    },
                    "Edit": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }
            
+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }
            
### Update Card Status [PUT]

**Allowed scopes**: onbehalfUpdateCard

Allows registered customers to update the card status

+ Parameters
    + partyId: `123456` (string, required)
    + membershipName: `RES` (string, required)
    + membershipKey: `111222333` (string, required)
    + cardnumber: 123123123 (string, required)
  
+ Request

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e
    + Body
    
            {
                "Status" : "Lost"
            }
            
+ Response 200 (application/json)
  
           {
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw?transactionId=000000001-001"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Agreements": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit{?transactionId}"
                    },
                    "Communication": {
                        "Href": "/transactions/000000001-001"
                    },
                    "Edit": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }

+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }
            
            
## Security [/customers/{partyId}/memberships/{membershipName}:{membershipKey}/memberships/authentication/]

### Request PIN Change [POST]

**Allowed scopes**: onbehalfRequestChangePin

Allows a member of staff to request a pin change on behalf of the customer. This is for when the customer has forgotten thier current pin. Once requested the customer will complete the journey on their own device.

+ Request

    + Headers 
            
            Authorization: Bearer (client credential token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e
            
    + Parameters
        + partyId: `123456` (string, required)
        + membershipName: `RES` (string, required)
        + membershipKey: `111222333` (string, required)

+ Response 200 (application/json)

           {
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw?transactionId=000000001-001"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Agreements": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit{?transactionId}"
                    },
                    "Communication": {
                        "Href": "/transactions/000000001-001"
                    },
                    "Edit": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "Account Locked"
            }

+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }

## Wallet [/customers/{partyId}/memberships/{membershipName}:{membershipKey}/finances]

This API will be return amount of funds available in SAW wallets along with specific calculated balances. It will also include funds allowed to be deposited or withdrawn based on limits set for the customer in the F&P tactical engine.

### View Balance [GET]

**Allowed scopes**: clientWalletGetBalance, staffWalletGetBalance

+ Parameters
    + partyId: `123456` (string, required)
    + membershipName: `RES` (string, required)
    + membershipKey: `111222333` (string, required)

+ Request

    + Headers 
            
            Authorization: Bearer (client credential/resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

            {
                "Balances": {
                  "TotalCash": 1000.00,
                  "TotalDigital": 500.00,
                  "TotalRetail": 700.00,
                  "AvailableToWithdraw": 600.00,
                  "AvailableToTransferToRetailGame": 0.00
                },
                "Limits": [
                  {
                    "Name": "TacticalWithdrawalLimit",
                    "RemainingAmount": 100.00
                  },
                  {
                    "Name": "TacticalDepositLimit",
                    "RemainingAmount": 350.00
                  }
                ],
                "Wallets": [
                    {
                      "WalletType": "Retail",
                      "Value": 300.00,
                      "Currency": "GBP"
                    },
                    {
                      "WalletType": "MultiChannel",
                      "Value": 200.00,
                      "Currency": "GBP"
                    },
                    {
                      "WalletType": "Digital",
                      "Value": 500.00,
                      "Currency": "GBP"
                    }
                ],
                "LastCalculatedDateTime": "2016-03-15T14:32:22Z",
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Deposit": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit{?transactionId}"
                    },
                    "Withdraw": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw{?transactionId}"
                    }
                }
            }

+ Response 424 (application/json)

            {
                "Message": "Customer not found"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Couldn't process the transaction. {System X} is unavailable."
            }

### Deposit [POST /customers/{partyId}/memberships/{membershipName}:{membershipKey}/finances/wallets/deposit?{transactionId}]

**Allowed scopes**: clientWalletDeposit, onbehalfWalletDeposit

If the transaction breaches the responsible gambling limits set by customer, then the transaction would faile and RES will return an error message. 
If current request breaches any AML/Fraud deposit limit, RES will store overflow funds to "pending" wallet, this will be mentioned in the response message.
If no limits are set or request within the limits, RES will process the transaction with AML/Fraud engine and limits/balance engine in "all-or-nothing" fashion. 
Any failure will be reported back 500 - server error. 


+ Parameters
    + partyId: `123456` (string, required)
    + membershipName: `RES` (string, required)
    + membershipKey: `111222333` (string, required)
    + transactionId: `000000001-001` (string, required)

+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body
    
            {
                "Amount": 100
            }

+ Response 200 (application/json)

    Transaction successfully processed
    
    + Body
    
            {
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit?transactionId=000000001-001"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Withdraw": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw{?transactionId}"
                    },
                    "TransactionStatus": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }

+ Response 202 (application/json)

    Undetermined state of transaction
    
    + Body
    
            {
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit?transactionId=000000001-001"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Withdraw": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw{?transactionId}"
                    },
                    "TransactionStatus": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "The specified amount exceeds tactical deposit limit"
            }

+ Response 400 (application/json)

            {
                "Message": "The specified amount is invalid"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "The latest version of PoPF is not signed off"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Couldn't process the transaction. {System X} is unavailable."
            }

### Withdraw [POST /customers/{partyId}/memberships/{membershipName}:{membershipKey}/finances/wallets/withdraw?{transactionId}]

**Allowed scopes**: clientWalletWithdraw, onbehalfWalletWithdraw

Customer will be asked to authenticate the transaction by entering the PIN number. 
If current request breaches any withdrawal limits, RES will throw and error along with an error message. 
If no limits are set or request within the limits, RES will process the transaction with AML/Fraud engine and limits/balance engine in "all-or-nothing" fashion. 
Any failure will be reported back 500 - server error. 

+ Parameters
    + partyId: `123456` (string, required)
    + membershipName: `RES` (string, required)
    + membershipKey: `111222333` (string, required)
    + transactionId: `000000001-001` (string, required)

+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (resource owner token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

    + Body
    
            {
                "Amount": 100
            }

+ Response 200 (application/json)

    Transaction successfully processed
    
    + Body
    
            {
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw?transactionId=000000001-001"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Deposit": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit{?transactionId}"
                    },
                    "TransactionStatus": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }

+ Response 202 (application/json)

    Undetermined state of transaction
    
    + Body
    
            {
                "_Links": {
                    "Self": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/withdraw?transactionId=000000001-001"
                    },
                    "ViewBalance": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances"
                    },
                    "Deposit": {
                        "Href": "/customers/123456/memberships/RES:111222333/finances/wallets/deposit{?transactionId}"
                    },
                    "TransactionStatus": {
                        "Href": "/transactions/000000001-001"
                    }
                }
            }

+ Response 400 (application/json)

            {
                "Message": "The requested amount exceeds available funds"
            }

+ Response 400 (application/json)

            {
                "Message": "The requested amount exceeds tactical withdrawal limit"
            }

+ Response 400 (application/json)

            {
                "Message": "The specified amount is invalid"
            }

+ Response 400 (application/json)

            {
                "Message": "Not a SAW customer"
            }

+ Response 424 (application/json)

            {
                "Message": "Customer Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Couldn't process the transaction. {System X} is unavailable."
            }

# Group Transactions

This API allows to get details of a particular transaction.

## Transaction Status [/transactions/{transactionId}]

###Scope: staffWalletGetTransactionStatus [GET]

This endpoint provides transaction status and details based on the transaction ID supplied.
All `Details` fields are optional and will be provided only if available in the transaction log.

+ Parameters
    + transactionId: `000000001-001` (string, required)
    
+ Request (application/json)

    + Headers 
            
            Authorization: Bearer (client credential token)
            X-Correlation-Token: 049651ef-2a37-4b13-88c8-4ebb4faa072e

+ Response 200 (application/json)

            {
                "Status": "Succeeded",
                "Details" : {
                    "CustomerNumber": "12345678",
                    "PlayerId": 519490721066127360,
                    "TransferId": "ccef74ff-414a-4a65-b961-eccb245927f8"
                },
                "_Links": {
                    "Self": {
                        "Href": "/transactions?transactionId=000000001-001"
                    }
                }
            }
            
+ Response 200 (application/json)

            {
                "Status": "Undetermined",
                "Details" : {
                    "CustomerNumber": "12345678",
                    "PlayerId": 519490721066127360,
                    "TransferId": "ccef74ff-414a-4a65-b961-eccb245927f8"
                },
                "_Links": {
                    "Self": {
                        "Href": "/transactions?transactionId=000000001-001"
                    }
                }
            }
            
+ Response 200 (application/json)

            {
                "Status": "Failed",
                "Details" : {
                    "CustomerNumber": "12345678",
                    "PlayerId": 519490721066127360,
                    "TransferId": "ccef74ff-414a-4a65-b961-eccb245927f8"
                },
                "_Links": {
                    "Self": {
                        "Href": "/transactions?transactionId=000000001-001"
                    }
                }
            }

+ Response 425 (application/json)

            {
                "Message": "Trasaction Not Found"
            }
            
+ Response 500 (application/json)

            {
                "Message": "Internal Error"
            }